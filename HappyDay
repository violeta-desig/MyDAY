import React, { useState, useEffect } from 'react';
import { Heart, MessageCircle, Music, Camera, Gift, Home, Calendar } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';

// Datos de canciones
const playlistSongs = [
  {
    id: "3QaPy1KgI7nu9FJEQUgn6h",
    title: "birds of a feather",
    artist: "Billie Eilish",
    spotifyUrl: "https://open.spotify.com/track/3QaPy1KgI7nu9FJEQUgn6h",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "0C21qHj3ebbxrRLqbjWnOT",
    title: "Incondicional",
    artist: "Babi",
    spotifyUrl: "https://open.spotify.com/track/0C21qHj3ebbxrRLqbjWnOT",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "3NUoEQ2W7pjFSOy08nXQed",
    title: "Colegas",
    artist: "Babi",
    spotifyUrl: "https://open.spotify.com/track/3NUoEQ2W7pjFSOy08nXQed",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "2ItAnWcjHz4lw8nIk6bkrC",
    title: "Heart Rate",
    artist: "Babi ft. Joanna Torres",
    spotifyUrl: "https://open.spotify.com/track/2ItAnWcjHz4lw8nIk6bkrC",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "3GSMdtJphymHEsR8K9jT5Q",
    title: "Locos",
    artist: "Le√≥n Larregui",
    spotifyUrl: "https://open.spotify.com/track/3GSMdtJphymHEsR8K9jT5Q",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "4hZruFvYKD0q57UJKs3XrQ",
    title: "C√≥mo T√∫",
    artist: "Le√≥n Larregui",
    spotifyUrl: "https://open.spotify.com/track/4hZruFvYKD0q57UJKs3XrQ",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "2QjOHCTQ1Jl3zawyYOpxh6",
    title: "Sweater Weather",
    artist: "The Neighbourhood",
    spotifyUrl: "https://open.spotify.com/track/2QjOHCTQ1Jl3zawyYOpxh6",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "3MqNcX1bfvExPBUCRuPc1Z",
    title: "Luna",
    artist: "Zo√©",
    spotifyUrl: "https://open.spotify.com/track/3MqNcX1bfvExPBUCRuPc1Z",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "50x1Ic8CaXkYNvjmxe3WXy",
    title: "Those Eyes",
    artist: "New West",
    spotifyUrl: "https://open.spotify.com/track/50x1Ic8CaXkYNvjmxe3WXy",
    cover: "/api/placeholder/300/300"
  },
  // Canciones adicionales
  {
    id: "7nYvUtkQMx1v80S2FkriAn",
    title: "Amor Completo",
    artist: "Mon Laferte",
    spotifyUrl: "https://open.spotify.com/track/7nYvUtkQMx1v80S2FkriAn",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "1TD9l7SfYWYC9bLLXXBXEb",
    title: "Die With A Smile",
    artist: "Bruno Mars, Lady Gaga",
    spotifyUrl: "https://open.spotify.com/track/1TD9l7SfYWYC9bLLXXBXEb",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "1I3abJEk4g50sCQiDy84Kc",
    title: "Por Eso Te Amo",
    artist: "R√≠o Roma",
    spotifyUrl: "https://open.spotify.com/track/1I3abJEk4g50sCQiDy84Kc",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "3uhkybRBYHGRPZQQgHm9f2",
    title: "Mariposas",
    artist: "Enanitos Verdes",
    spotifyUrl: "https://open.spotify.com/track/3uhkybRBYHGRPZQQgHm9f2",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "2pDMirO64BjFxLumOtf0IG",
    title: "Heartbeat",
    artist: "BTS",
    spotifyUrl: "https://open.spotify.com/track/2pDMirO64BjFxLumOtf0IG",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "4VXIryQMWpIdGgYR4TrjT1",
    title: "hostage",
    artist: "Billie Eilish",
    spotifyUrl: "https://open.spotify.com/track/4VXIryQMWpIdGgYR4TrjT1",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "5x48z5fxtm63mGbmKIGVZS",
    title: "Halley's Comet",
    artist: "Billie Eilish",
    spotifyUrl: "https://open.spotify.com/track/5x48z5fxtm63mGbmKIGVZS",
    cover: "/api/placeholder/300/300"
  },
  {
    id: "5KzPglDQJ4gIkFUl79eL2t",
    title: "Te Quiero Mucho",
    artist: "R√≠o Roma",
    spotifyUrl: "https://open.spotify.com/track/5KzPglDQJ4gIkFUl79eL2t",
    cover: "/api/placeholder/300/300"
  }
];

const AnniversaryPage = () => {
  const [currentView, setCurrentView] = useState('login');
  const [date, setDate] = useState('');
  const [error, setError] = useState('');
  const [currentMessage, setCurrentMessage] = useState(0);
  const [currentReason, setCurrentReason] = useState(0);
  const [showHearts, setShowHearts] = useState(true);
  
  const CORRECT_DATE = '01/10/2024';
  
  const loveMessages = [
    "Tienes los ojitos m√°s preciosos que he visto jam√°s ‚ú®",
    "Quisiera poder abrazarte fuerte y no separarme de ti ü§ó",
    "Realmente te adoro con todo mi coraz√≥n ‚ù§Ô∏è",
    "¬øSabes que eres mi raz√≥n? ¬øNo? Pues ahora lo sabes üí´",
    "Aunque no pueda estar a tu lado siempre... Ten en cuenta que te amo üíï",
    "Eres mi ni√±o, y te adoro con todo mi coraz√≥n... üíù",
    "Cada sonrisa tuya ilumina mi d√≠a entero ‚ú®",
    "Me encantas exactamente como eres üí´",
    "Contigo los momentos simples se vuelven m√°gicos ‚ú®",
    "Eres mi persona favorita en todo el mundo üåé",
    "Tu amor hace que todo sea mejor üíñ",
    "Me haces sonre√≠r sin siquiera intentarlo üòä",
    "Eres el mejor regalo que la vida me ha dado üéÅ",
    "Cada d√≠a me enamoro m√°s de ti üíò",
    "Eres mi lugar favorito para estar üè°",
    "Tu amor es mi mayor fortaleza üí™",
    "Contigo todo es posible üåü",
    "Eres mi historia favorita de amor ‚ù§Ô∏è",
    "Me encanta c√≥mo me haces sentir ü•∞",
    "Tu felicidad es mi felicidad üòä",
    "Eres mi pensamiento favorito üí≠",
    "Contigo el tiempo pasa volando ‚è∞",
    "Me encantan nuestras locuras juntos üéâ",
    "Eres mi peque√±o universo entero üåå",
    "Tu amor me hace mejor persona üí´",
    "Cada momento contigo es un tesoro üíé",
    "Eres mi mayor bendici√≥n üôè",
    "Tu amor es mi canci√≥n favorita üéµ",
    "Me enamoran tus detalles conmigo üéÄ",
    "Eres mi mejor decisi√≥n ‚ú®"
  ];

  const reasons = [
    "Por tu forma de hacerme sonre√≠r",
    "Por c√≥mo me cuidas siempre",
    "Por tu manera √∫nica de ser",
    "Por tu hermoso coraz√≥n",
    "Por c√≥mo me haces sentir especial",
    "Por todos nuestros momentos juntos",
    "Por tu apoyo incondicional",
    "Por tu dulzura conmigo",
    "Por c√≥mo me entiendes",
    "Por ser exactamente como eres",
    "Por tu risa que ilumina mi d√≠a",
    "Por la forma en que me miras",
    "Por c√≥mo sostienes mi mano",
    "Por tus abrazos que me hacen sentir en casa",
    "Por tu inteligencia que me cautiva",
    "Por tu fortaleza ante las dificultades",
    "Por la magia que traes a mi vida",
    "Por tu paciencia conmigo",
    "Por las conversaciones hasta el amanecer",
    "Por c√≥mo me inspiras a ser mejor",
    "Por los peque√±os detalles que tienes",
    "Por tu pasi√≥n en todo lo que haces",
    "Por tu forma de escucharme",
    "Por tu sinceridad en todo momento",
    "Por c√≥mo me aceptas con mis defectos",
    "Por tu creatividad que me sorprende",
    "Por los sue√±os que compartimos",
    "Por tu valent√≠a que me motiva",
    "Por la paz que siento a tu lado",
    "Por tu generosidad con todos",
    "Por c√≥mo iluminas cualquier habitaci√≥n",
    "Por tu sentido del humor √∫nico",
    "Por tus consejos cuando m√°s los necesito",
    "Por la magia de tu mirada",
    "Por tus palabras de aliento",
    "Por la energ√≠a positiva que irradias",
    "Por tu autenticidad en un mundo de copias",
    "Por tu forma de ver lo bueno en todo",
    "Por c√≥mo me haces creer en el amor",
    "Por los proyectos que emprendemos juntos",
    "Por tu lealtad inquebrantable",
    "Por tu cari√±o que me envuelve",
    "Por las aventuras que vivimos",
    "Por tu manera de hacerme sentir protegido/a",
    "Por tu voz que calma mis tempestades",
    "Por tu comprensi√≥n cuando me equivoco",
    "Por la felicidad que generas a tu alrededor",
    "Por ser mi compa√±ero/a perfecto/a",
    "Por tu alma hermosa que brilla",
    "Por ser mi persona favorita en este mundo",
    "Existen demasiadas razones para amarte, pero las palabras no lograr√≠an explicarlas, as√≠ que te dir√© solo algunas"
  ];

  // Efecto de corazones flotantes
  const FloatingHearts = () => {
    const [hearts, setHearts] = useState([]);

    useEffect(() => {
      if (!showHearts) return;
      
      const interval = setInterval(() => {
        const newHeart = {
          id: Date.now(),
          left: Math.random() * 100,
          size: 12 + Math.random() * 20,
          animationDuration: 3 + Math.random() * 3
        };

        setHearts(prev => [...prev, newHeart]);
        setTimeout(() => {
          setHearts(prev => prev.filter(h => h.id !== newHeart.id));
        }, newHeart.animationDuration * 1000);
      }, 300);

      return () => clearInterval(interval);
    }, []);

    return (
      <div className="fixed inset-0 pointer-events-none overflow-hidden">
        {hearts.map(heart => (
          <div
            key={heart.id}
            className="absolute text-2xl"
            style={{
              left: `${heart.left}%`,
              bottom: '-20px',
              fontSize: `${heart.size}px`,
              animation: `float ${heart.animationDuration}s linear forwards`
            }}
          >
            ‚ù§Ô∏è
          </div>
        ))}
        <style jsx>{`
          @keyframes float {
            0% {
              transform: translateY(0) rotate(0deg);
              opacity: 0.8;
            }
            100% {
              transform: translateY(-100vh) rotate(360deg);
              opacity: 0;
            }
          }
        `}</style>
      </div>
    );
  };

  const handleDateSubmit = () => {
    if (date === CORRECT_DATE) {
      setCurrentView('main');
      setError('');
    } else {
      setError('¬°M√°s vale que te hayas equivocado de broma nom√°s! üòÉ');
    }
  };

  const MenuButton = ({ icon, label, onClick, active }) => (
    <button
      onClick={onClick}
      className={`flex items-center space-x-2 w-full p-4 rounded-lg transition-colors ${
        active 
          ? 'bg-gradient-to-r from-red-500 to-pink-500 text-white' 
          : 'text-gray-700 hover:bg-pink-50'
      }`}
    >
      {icon}
      <span className="font-medium">{label}</span>
    </button>
  );

  const [activeSection, setActiveSection] = useState('inicio');

  const renderContent = () => {
    switch (activeSection) {
      case 'mensajes':
        return (
          <div className="p-4 space-y-4">
            <Card className="bg-gradient-to-r from-pink-50 to-red-50 p-6">
              <CardContent>
                <p className="text-lg text-gray-800 italic">"{loveMessages[currentMessage]}"</p>
                <button 
                  onClick={() => setCurrentMessage((prev) => (prev + 1) % loveMessages.length)}
                  className="mt-4 px-4 py-2 bg-pink-500 text-white rounded-lg hover:bg-pink-600 transition-colors"
                >
                  Nuevo Mensaje ‚ù§Ô∏è
                </button>
              </CardContent>
            </Card>
          </div>
        );
      case 'musica':
        return (
          <div className="p-4 space-y-4 pb-24">
            <h2 className="text-xl font-bold text-pink-600 mb-4">Nuestra Playlist</h2>
            <div className="grid grid-cols-1 gap-4">
              {playlistSongs.map((song) => (
                <Card key={song.id} className="overflow-hidden hover:shadow-md transition-shadow">
                  <CardContent className="p-4">
                    <div className="flex items-center space-x-4">
                      <img src={song.cover} alt={song.title} className="w-16 h-16 rounded-lg" />
                      <div className="flex-1">
                        <h3 className="font-medium">{song.title}</h3>
                        <p className="text-gray-600 text-sm">{song.artist}</p>
                        <a 
                          href={song.spotifyUrl} 
                          target="_blank" 
                          rel="noopener noreferrer"
                          className="mt-2 inline-block px-3 py-1 bg-pink-500 text-white rounded-lg hover:bg-pink-600 transition-colors text-sm"
                        >
                          ‚ñ∂Ô∏è Escuchar en Spotify
                        </a>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        );
      case 'razones':
        return (
          <div className="p-4 space-y-4">
            <Card className="bg-gradient-to-r from-red-50 to-pink-50 p-6">
              <CardHeader>
                <CardTitle className="text-center text-pink-600">Razones por las que te amo</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-center">
                  <div className="text-5xl mb-6">‚ù§Ô∏è</div>
                  <p className="text-lg text-gray-800 mb-6 font-medium">{reasons[currentReason]}</p>
                  <p className="text-sm text-gray-600 mb-4">{currentReason + 1} de {reasons.length}</p>
                  <button 
                    onClick={() => setCurrentReason((prev) => (prev + 1) % reasons.length)}
                    className="px-4 py-2 bg-pink-500 text-white rounded-lg hover:bg-pink-600 transition-colors"
                  >
                    Siguiente Raz√≥n üíò
                  </button>
                </div>
              </CardContent>
            </Card>
          </div>
        );
      case 'fotos':
        return (
          <div className="p-4 text-center space-y-4">
            <h2 className="text-xl font-bold text-pink-600 mb-4">Nuestros Recuerdos</h2>
            <div className="grid grid-cols-2 gap-4">
              {[1, 2, 3, 4, 5, 6].map((i) => (
                <div key={i} className="rounded-lg overflow-hidden shadow-md">
                  <img 
                    src={`/api/placeholder/300/300`} 
                    alt={`Recuerdo ${i}`} 
                    className="w-full h-40 object-cover"
                  />
                </div>
              ))}
            </div>
            <p className="text-gray-600 italic mt-4">Aqu√≠ ir√°n nuestras fotos especiales... ‚ô•</p>
          </div>
        );
      default:
        return (
          <div className="p-4 text-center space-y-6">
            <div className="text-5xl mb-2">üíñ</div>
            <h2 className="text-2xl font-bold text-pink-600 mb-4">¬°Feliz 6 Meses Amor!</h2>
            <p className="text-gray-700">
              Seis meses a tu lado han sido el mejor viaje de mi vida.
              Cada momento contigo es un regalo que atesoro en mi coraz√≥n.
              Este peque√±o espacio es para celebrar nuestro amor y todo lo que hemos construido juntos.
            </p>
            <div className="grid grid-cols-2 gap-4 mt-6">
              <button
                onClick={() => setActiveSection('mensajes')}
                className="p-4 bg-gradient-to-r from-pink-400 to-pink-500 text-white rounded-lg shadow-md hover:from-pink-500 hover:to-pink-600 transition-colors"
              >
                Mensajes para ti ‚ù§Ô∏è
              </button>
              <button
                onClick={() => setActiveSection('razones')}
                className="p-4 bg-gradient-to-r from-red-400 to-red-500 text-white rounded-lg shadow-md hover:from-red-500 hover:to-red-600 transition-colors"
              >
                Razones de mi amor üíï
              </button>
            </div>
            <div className="mt-4">
              <button
                onClick={() => setShowHearts(!showHearts)}
                className="px-4 py-2 bg-pink-100 text-pink-600 rounded-lg hover:bg-pink-200 transition-colors"
              >
                {showHearts ? "Pausar corazones" : "Mostrar corazones"} üíó
              </button>
            </div>
            <div className="mt-6">
              <button
                onClick={() => setActiveSection('musica')}
                className="p-4 bg-gradient-to-r from-purple-400 to-pink-500 text-white rounded-lg shadow-md hover:from-purple-500 hover:to-pink-600 transition-colors"
              >
                Explorar nuestra playlist üéµ
              </button>
            </div>
          </div>
        );
    }
  };

  if (currentView === 'login') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-500 to-pink-500 flex flex-col items-center justify-center p-4 space-y-4">
        {showHearts && <FloatingHearts />}
        <div className="text-white text-3xl font-bold mb-8 text-center">
          Seis meses de amor y miles m√°s por venir ‚ù§Ô∏è
        </div>
        <Card className="w-full max-w-md bg-white/95 backdrop-blur p-6 space-y-4">
          <CardContent>
            <div className="text-center mb-4">
              Ingresa nuestra fecha especial para continuar
              <br />
              (DD/MM/YYYY)
            </div>
            <input
              type="text"
              value={date}
              onChange={(e) => setDate(e.target.value)}
              placeholder="DD/MM/YYYY"
              className="w-full p-2 border rounded-lg mb-4 text-center focus:ring-2 focus:ring-pink-500 focus:border-pink-500"
            />
            <button
              onClick={handleDateSubmit}
              className="w-full bg-gradient-to-r from-red-500 to-pink-500 text-white p-2 rounded-lg hover:from-red-600 hover:to-pink-600 transition-colors"
            >
              Celebrar Nuestros 6 Meses ‚ù§Ô∏è
            </button>
            {error && (
              <div className="text-pink-500 text-center mt-2 animate-bounce">
                {error}
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-red-500 to-pink-500">
      {showHearts && <FloatingHearts />}
      <div className="flex flex-col h-screen">
        <div className="p-4">
          <div className="text-white text-2xl flex items-center space-x-2">
            <Heart className="text-white" fill="white" />
            <span>Nuestros 6 Meses ‚ù§Ô∏è</span>
          </div>
        </div>
        
        <div className="flex-1 bg-white rounded-t-3xl p-4 overflow-auto pb-24">
          {renderContent()}
          
          <div className="fixed bottom-0 left-0 right-0 bg-white border-t p-2">
            <div className="grid grid-cols-5 gap-2 max-w-lg mx-auto">
              <MenuButton 
                icon={<Home size={20} />}
                label="Inicio"
                onClick={() => setActiveSection('inicio')}
                active={activeSection === 'inicio'}
              />
              <MenuButton 
                icon={<MessageCircle size={20} />}
                label="Mensajes"
                onClick={() => setActiveSection('mensajes')}
                active={activeSection === 'mensajes'}
              />
              <MenuButton 
                icon={<Music size={20} />}
                label="M√∫sica"
                onClick={() => setActiveSection('musica')}
                active={activeSection === 'musica'}
              />
              <MenuButton 
                icon={<Gift size={20} />}
                label="Razones"
                onClick={() => setActiveSection('razones')}
                active={activeSection === 'razones'}
              />
              <MenuButton 
                icon={<Camera size={20} />}
                label="Fotos"
                onClick={() => setActiveSection('fotos')}
                active={activeSection === 'fotos'}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AnniversaryPage;
